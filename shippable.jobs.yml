jobs:

######################### NATIVE WAR CI/CD JOBS #########################

# runCI job that builds and pushes artifact to S3
  - name: java-gcr-gke-runcli_runCI
    type: runCI
    steps:
      - OUT: java_gcr_gke_runcli_img_audit
      - OUT: java_gcr_gke_runcli_img_auth
    flags:
      - sample_project_1      

# runCLI job that deploys image in ECR - TEST
  - name: java_gcr_gke_runcli_test_deploy_all
    type: runCLI
    steps:
      - IN: java_gcr_gke_runcli_img_audit
        switch: off
      - IN: java_gcr_gke_runcli_img_auth
        switch: off
      - IN: java_gcr_gke_runcli_gitrepo
        switch: off
      - IN: java_gcr_gke_runcli_googlecli
      - TASK:
        - script: SERVICES=(auth audit)
        # deploy each service to GKE
        - script: |
            for service in ${SERVICES[@]}; do
              echo "deploying $service"
              # update template files with values in env variables
              cd $JAVA_GCR_GKE_RUNCLI_GITREPO_STATE
              # shippable_replace zz-kubernetes/deploy-$service.yml
              shippable_replace kube-deploy.yaml
              # deploy to cluster and verify success
              kubectl version
              # kubectl apply -f zz-kubernetes/deploy-$service.yml
              kubectl apply -f kube-deploy.yaml
              kubectl rollout status deployments $service
            done
    flags:
      - sample_project_1      

# runCLI job that deploys image in ECR - TEST
  - name: java_gcr_gke_runcli_test_deploy_audit
    type: runCLI
    steps:
      - IN: java_gcr_gke_runcli_img_audit
        switch: off
      - IN: java_gcr_gke_runcli_gitrepo
        switch: off
      - IN: java_gcr_gke_runcli_googlecli
      - TASK:
        - script: SERVICES=(audit)
        # deploy each service to GKE
        - script: |
            for service in ${SERVICES[@]}; do
              echo "deploying $service"
              # update template files with values in env variables
              cd $JAVA_GCR_GKE_RUNCLI_GITREPO_STATE
              # shippable_replace zz-kubernetes/deploy-$service.yml
              shippable_replace kube-deploy.yaml
              # deploy to cluster and verify success
              kubectl version
              # kubectl apply -f zz-kubernetes/deploy-$service.yml
              kubectl apply -f kube-deploy.yaml
              kubectl rollout status deployments $service
            done
    flags:
      - sample_project_1      

# runCLI job that deploys image in ECR - TEST
  - name: java_gcr_gke_runcli_test_deploy_auth
    type: runCLI
    steps:
      - IN: java_gcr_gke_runcli_img_auth
        switch: off
      - IN: java_gcr_gke_runcli_gitrepo
        switch: off
      - IN: java_gcr_gke_runcli_googlecli
      - TASK:
        - script: SERVICES=(auth)
        # deploy each service to GKE
        - script: |
            for service in ${SERVICES[@]}; do
              echo "deploying $service"
              # update template files with values in env variables
              cd $JAVA_GCR_GKE_RUNCLI_GITREPO_STATE
              # shippable_replace zz-kubernetes/deploy-$service.yml
              shippable_replace kube-deploy.yaml
              # deploy to cluster and verify success
              kubectl version
              # kubectl apply -f zz-kubernetes/deploy-$service.yml
              kubectl apply -f kube-deploy.yaml
              kubectl rollout status deployments $service
            done
    flags:
      - sample_project_1      
